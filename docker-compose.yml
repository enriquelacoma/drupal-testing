version: "3"

services:
  web:
    build:
      context: ./
      dockerfile: Dockerfile-drupal
    container_name: "${PROJECT_NAME}_web"
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html # Non Mac users.
      - xhgui:/usr/local/src/xhgui
      # - nfsmount:/var/www/html # Mac Users with the nfsmount volume.
    environment:
      # PHP/apache config.
      DOCUMENT_ROOT: /var/www/html/web
      HTTP_PORT: 80
      DAEMON_USER: fpfis
      DAEMON_GROUP: fpfis
      # XDEBUG config.
      # For Xdebug setup in PhpStorm:
      # - Go to Settings > Languages & Frameworks > PHP > Servers
      # - Add a server named "Docker"
      # - Enable path mapping and for the project root path set "Absolute path on the server" to "/var/www/html".
      PHP_IDE_CONFIG: "serverName=Docker"
      # Mailhog config.
      SMTP_SERVER: mailhog
      SMTP_PORT: 1025
      # XHGui config.
      XHGUI_MONGO_HOST: "mongodb://xhgui"
      # ASDA CREDENTIALS
      # By leaving these variables empty Docker Compose will set them to their host values.
      ASDA_USER:
      ASDA_PASSWORD:
    env_file:
      - .env
    labels:
      - "traefik.http.services.${PROJECT_NAME}_web.loadbalancer.server.port=80"
      - "traefik.http.routers.${PROJECT_NAME}_web.rule=HostRegexp(`{subdomain:ecdc-[A-Za-z0-9-]+}.${PROJECT_BASE_URL}`)"

  mysql:
    # We use wodby/mariadb instead of percona/percona-server because it contains an optimized my.cnf version.
    image: wodby/mariadb:$MARIADB_TAG
    container_name: "${PROJECT_NAME}_mysql"
    stop_grace_period: 30s
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
#      volumes:
#        - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
#        - /path/to/mariadb/data/on/host:/var/lib/mysql # Use bind mount

  pma:
    image: phpmyadmin/phpmyadmin
    container_name: "${PROJECT_NAME}_pma"
    environment:
      PMA_HOST: $DRUPAL_DATABASE_HOST
      PMA_USER: $DRUPAL_DATABASE_USERNAME
      PMA_PASSWORD: ''
      PHP_UPLOAD_MAX_FILESIZE: 1G
      PHP_MAX_INPUT_VARS: 1G
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_pma.rule=Host(`pma.${PROJECT_BASE_URL}`)"

  selenium:
    image: selenium/standalone-chrome-debug:$SELENIUM_CHROME_TAG
    container_name: "${PROJECT_NAME}_selenium"
    ports:
      - '5900:5900'
    expose:
      - 4444
    volumes:
      - /dev/shm:/dev/shm
    labels:
      - "traefik.tcp.services.mytcpservice.loadbalancer.server.port=5900"

  mailhog:
    image: mailhog/mailhog
    container_name: "${PROJECT_NAME}_mailhog"
    labels:
      - "traefik.http.services.${PROJECT_NAME}_mailhog.loadbalancer.server.port=8025"
      - "traefik.http.routers.${PROJECT_NAME}_mailhog.rule=Host(`mailhog.${PROJECT_BASE_URL}`)"

  solr:
    image: wodby/solr:$SOLR_TAG
    container_name: "${PROJECT_NAME}_solr"
    environment:
      SOLR_DEFAULT_CONFIG_SET: $SOLR_CONFIG_SET
      SOLR_HEAP: 1024m
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_solr.rule=Host(`solr.${PROJECT_BASE_URL}`)"

  xhgui:
    image: edyan/xhgui:php7.2
    container_name: "${PROJECT_NAME}_xhgui"
    volumes:
      - xhgui:/usr/local/src/xhgui
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_xhgui.rule=Host(`xhgui.${PROJECT_BASE_URL}`)"

  portainer:
    image: portainer/portainer
    container_name: "${PROJECT_NAME}_portainer"
    command: --no-auth -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_portainer.rule=Host(`portainer.${PROJECT_BASE_URL}`)"

  traefik:
    image: traefik:v2.0
    container_name: "${PROJECT_NAME}_traefik"
    command: --api.insecure=true --providers.docker
    ports:
      - '8080:80'
#      - '8088:8080' # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  xhgui:
